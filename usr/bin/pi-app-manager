#!/usr/bin/env ruby

# Pi App Manager
# 2020-2021 Piano Nekomiya
# Twitter: @PianoCat1010

# 設定
require 'open-uri'
require 'fileutils'
require_relative '/etc/pi-app-manager/config'
entry_extension = "entry"
version = 0.1
tmpdir = "/tmp/pi-app-manager"

# スクリプトのアップデート
def script_update
  require 'rugged'
  system("source /etc/os-release && echo ${VERSION_CODENAME} > /tmp/pi-app-manager/osversion.txt")
  FileUtils.cd(tmpdir)
  osversion = File.read("osversion.txt")
  Dir.mkdir("scripts")
  scriptdl = Rugged::Repository.clone_at("https://github.com/NSK-1010/pi-app-manager-scripts-ruby-#{osversion}", "scripts")
  FileUtiles.mkdir_p(scriptdir)
  FileUtils.mv("scripts/*", scriptdir + "/")
  FileUtils.rm_r("scripts")
  FileUtils.rm("osversion.txt")
  FileUtils.cd(__dir__)
end

# インストールとアンインストール
def install_uninstall
  script_update()
  system("dpkg -l > /tmp/pi-app-manager/instaledlist.txt")
  installedlist = File.read(tmpdir + "/instaledlist.txt")
  scripts = Dir.glob("#{scriptdir}/*.#{entry_extension}")
  require scripts
  for package in scripts.length do
    p name
    p "- " + description
    if installedlist.include?("#{package_name}") == true then
      puts "(インストール済み)"
    else
      puts "(未インストール)"
    end
    p "\n"
  end
  puts "インストール・アンインストールしたいソフトウェアを空白で区切って入力してください。"
  print "> "
  installpkg = gets.chomp.split(' ')
  puts "処理開始"
  for installpkgnum in installpkg.length do
    if installedlist.include?("#{package_name}") == true then
      uninstall()
    else
      install()
    end
  end
  puts "処理完了"
  File.delete(tmpdir + "/instaledlist.txt")
end

# アップデート
def update
  system("apt-get update")
end

# アップグレード
def upgrade
  system("apt-get upgrade")
end

# welcome
Dir.mkdir(tmpdir)
puts "Welcome!"
puts "実行したい作業を入力してください。"
puts <<~EOS
  install インストールとアンインストール
  update パッケージリストのアップデート
  upgrade パッケージのアップグレード
EOS
print "> "
method = gets.chomp
case method
  when install
    install_uninstall()
  when update
    update()
  when upgrade
    upgrade()
end
